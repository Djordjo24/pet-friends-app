import {
  GiSittingDog,
  GiEgyptianBird,
  GiRabbit,
  GiSandSnake,
} from "react-icons/gi";
import { FaCat, FaUndo } from "react-icons/fa";
import { IoPaw } from "react-icons/io5";
import { getFormattedDate } from "../utils/utils";

export const petCategories = [
  {
    icon: <GiSittingDog />,
    title: "Dogs",
    petCategory: "dog",
  },
  {
    icon: <FaCat />,
    title: "Cats",
    petCategory: "cat",
  },
  {
    icon: <GiEgyptianBird />,
    title: "Birds",
    petCategory: "bird",
  },

  {
    icon: <GiRabbit />,
    title: "Rodents",
    petCategory: "rodent",
  },
  {
    icon: <GiSandSnake />,
    title: "Reptiles",
    petCategory: "reptile",
  },
  {
    icon: <IoPaw />,
    title: "Other Pets",
    petCategory: "other",
  },
  {
    icon: <FaUndo />,
    title: "Reset",
    petCategory: "reset",
  },
];

export const Inputs = [
  {
    id: "petName",
    missingLabel: "*Pet name",
    type: "text",
    name: "petName",
    required: true,
    errormessage: "Please enter the pet's name.",
  },
  {
    id: "date",
    missinglabel: "*Date of disappearance",
    foundlabel: "*Date found",
    type: "date",
    name: "date",
    min: "2025-01-01",
    max: getFormattedDate(new Date()),
    required: true,
    errormessage: "Please enter the date date. Date cannot be in the future.",
  },
  {
    id: "time",
    missinglabel: "*Time of disappearance",
    foundlabel: "*Time found",
    type: "time",
    name: "time",
    required: true,
    errormessage: "Please enter the time.",
  },
  {
    id: "formattedAddress",
    missinglabel: "*Address of disappearance",
    foundlabel: "*Found at address",
    type: "text",
    name: "formattedAddress",
    required: true,
    errormessage:
      "Please enter the addres and select a location from the suggestions.",
  },
  {
    id: "owner",
    missinglabel: "*Owner",
    type: "text",
    name: "owner",
    placeholder: "John Doe",
    pattern: "^([A-ZŠĐŽČĆ][a-zšđžčć]+)(\\s[A-ZŠĐŽČĆ][a-zšđžčć]+)*$",
    required: true,
    errormessage: "Please enter the owner's full name.",
  },
  {
    id: "contact",
    missinglabel: "*Contact",
    type: "tel",
    name: "contact",
    placeholder: "+381641234567 or 0641234567",
    pattern: "^(\\+3816[0-6,89]|06[0-6,89])\\d{6,7}$",
    required: true,
    errormessage: "Please enter a valid phone number.",
  },
  {
    id: "medication",
    missinglabel: "If the pet is taking medication, what kind?",
    type: "text",
    name: "medication",
  },
  {
    id: "reward",
    missinglabel: "Pet finder reward (€)",
    type: "number",
    name: "reward",
  },
];

export const requiredInputs = [
  "petName",
  "date",
  "time",
  "formattedAddress",
  "owner",
  "contact",
];

export const langmap = {
  А: "A",
  Б: "B",
  В: "V",
  Г: "G",
  Д: "D",
  Ђ: "Đ",
  Е: "E",
  Ж: "Ž",
  З: "Z",
  И: "I",
  Ј: "J",
  К: "K",
  Л: "L",
  Љ: "Lj",
  М: "M",
  Н: "N",
  Њ: "Nj",
  О: "O",
  П: "P",
  Р: "R",
  С: "S",
  Т: "T",
  Ћ: "Ć",
  У: "U",
  Ф: "F",
  Х: "H",
  Ц: "C",
  Ч: "Č",
  Џ: "Dž",
  Ш: "Š",
  а: "a",
  б: "b",
  в: "v",
  г: "g",
  д: "d",
  ђ: "đ",
  е: "e",
  ж: "ž",
  з: "z",
  и: "i",
  ј: "j",
  к: "k",
  л: "l",
  љ: "lj",
  м: "m",
  н: "n",
  њ: "nj",
  о: "o",
  п: "p",
  р: "r",
  с: "s",
  т: "t",
  ћ: "ć",
  у: "u",
  ф: "f",
  х: "h",
  ц: "c",
  ч: "č",
  џ: "dž",
  ш: "š",
};
